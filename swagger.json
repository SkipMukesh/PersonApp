{
  "swagger": "2.0",
  "info": {
    "description": "This task is to create a rest api which can display the list of person details. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). In this, One can add, edit or delete person details in it.",
    "version": "1.0.0",
    "title": "Swagger PersonApp",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/PersonApp1/libraries",
  "tags": [
    {
      "name": "persons",
      "description": "All details about a person",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/persons": {
      "post": {
        "tags": [
          "person"
        ],
        "summary": "Add a new person to the store",
        "description": "",
        "operationId": "addPerson",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Person object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Finds Persons",
        "description": "return all Persons",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/persons/{psnId}": {
      "delete": {
        "tags": [
          "person"
        ],
        "summary": "Deletes a person",
        "description": "",
        "operationId": "deletePerson",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "psnId",
            "in": "path",
            "description": "Person id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Person not found"
          }
        }
      },
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Find person by ID",
        "description": "Returns a single person",
        "operationId": "getPersonById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "psnId",
            "in": "path",
            "description": "ID of person to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Person not found"
          }
        }
      },
      "put": {
        "tags": [
          "person"
        ],
        "summary": "Update person",
        "description": "Update person",
        "operationId": "updated person",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "psnId",
            "in": "path",
            "description": "id that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated person object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Person": {
      "type": "object",
      "properties": {
        "psnId": {
          "type": "integer",
          "format": "int64"
        },
        "psnName": {
          "type": "string"
        },
        "psnMail": {
          "type": "string"
        },
        "psnAge": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}